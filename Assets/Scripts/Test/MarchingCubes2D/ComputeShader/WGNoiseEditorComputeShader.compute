#pragma kernel NoiseEditor
#include "/Includes/Math.compute"
#include "/Includes/Noise.compute"

struct WGEditorOutputGPU
{
    int2 coord;
    float voronoiHeight;
    float normHeight;
    float voronoiMatchHeight;
    float combinedHeight;
    float subHeight;
    float subVoronoiMatchHeight;
    float subCombinedHeight;
};

/*Output*/
RWStructuredBuffer<WGEditorOutputGPU> Heights;

/*Shared data*/
int3 ChunkCoord;

[numthreads(8, 8, 1)]
void NoiseEditor(uint3 id : SV_DispatchThreadID)
{
    //Local space coord
    int index = IndexByCoord(id.x, id.y, id.z);
    int3 coord = CoordByIndex(index);

	//World space coord
    int chunkCoordX = (ChunkCoord.x * ThreadDimensions.x) + coord.x;
    int chunkCoordY = (ChunkCoord.y * ThreadDimensions.y) + coord.y;

	//Voronoi map
    int regionIndexes[3];
    float voronoiHeight = Voronoi(chunkCoordX, chunkCoordY, regionIndexes);
	
	//Normal map
    float normHeight = Perlin(chunkCoordX, chunkCoordY, MapOctaveOffsets);
    float voronoiMatchHeight = BiomeBlendView(normHeight, voronoiHeight, float2(chunkCoordX, chunkCoordY), regionIndexes, false, false);
    float combinedHeight = BiomeBlend(normHeight, voronoiHeight, float2(chunkCoordX, chunkCoordY), regionIndexes, false);

	//Subtractive map
    float subHeight = Perlin(chunkCoordX, chunkCoordY, SubMapOctaveOffsets);
    float subVoronoiMatchHeight = BiomeBlendSubtrativeView(subHeight, voronoiHeight, float2(chunkCoordX, chunkCoordY), regionIndexes, true, false);
    float subCombinedHeight = BiomeBlendSubtrative(subHeight, voronoiHeight, float2(chunkCoordX, chunkCoordY), regionIndexes, true);

    Heights[index].coord.x = chunkCoordX;
    Heights[index].coord.y = chunkCoordY;
    Heights[index].voronoiHeight = voronoiHeight;
    Heights[index].normHeight = normHeight;
    Heights[index].voronoiMatchHeight = voronoiMatchHeight;
    Heights[index].combinedHeight = combinedHeight;
    Heights[index].subHeight = subHeight;
    Heights[index].subVoronoiMatchHeight = subVoronoiMatchHeight;
    Heights[index].subCombinedHeight = subCombinedHeight;
}
